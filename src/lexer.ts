import * as moo from "moo";

export const keywords = [
  "if",
  "else",
  "for",
  "while",
  "do",
  "switch",
  "case",
  "default",
  "break",
  "fn",
  "pr",
  "bool",
  "int",
  "float",
  "vec2",
  "vec3",
  "vec4",
  "mat2",
  "mat3",
  "mat4",
  "bvec2",
  "bvec3",
  "bvec4",
  "ivec2",
  "ivec3",
  "ivec4",
  "true",
  "false",
] as const;

export const lexer = moo.compile({
  ws: /[ \t]+/,
  lb: { match: /\n/, lineBreaks: true },
  comment: /\/\/.*?$/,
  multiline_comment: /\/\*[^]*\*\//,
  float: /[+-]?(?:[0-9]*\.[0-9]+|[0-9]+\.)/,
  int: /[-+]?[0-9]+/,
  assign_plus: "+=",
  assign_minus: "-=",
  assign_mult: "*=",
  assign_div: "/=",
  assign_modulo: "%=",
  assign_band: "&=",
  assign_bxor: "^=",
  assign_bor: "|=",
  incr: "++",
  decr: "--",
  assign_blshift: "<<=",
  assign_brshift: ">>=",
  blshift: "<<",
  brshift: ">>",
  arrow: "->",
  lte: "<=",
  lt: "<",
  gte: ">=",
  gt: ">",
  eq: "==",
  neq: "!=",
  and: "&&",
  or: "||",
  band: "&",
  bxor: "^",
  bor: "|",
  not: "!",
  assignment: "=",
  lparen: "(",
  rparen: ")",
  lbrace: "{",
  rbrace: "}",
  lbracket: "[",
  rbracket: "]",
  comma: ",",
  plus: "+",
  minus: "-",
  mult: "*",
  div: "/",
  modulo: "%",
  question_mark: "?",
  colon: ":",
  semicolon: ";",
  period: ".",
  identifier: {
    match: /[_a-zA-Z][_a-zA-Z0-9]+/,
    type: moo.keywords(Object.fromEntries(keywords.map((k) => ["kw-" + k, k]))),
  },
});

/*
lexer.reset("vec4 color = vec4(1., 0.1, 3.0, 0.);\n");
while (true) {
  const next = lexer.next();
  if (next === undefined) break;
  console.log(next);
}
*/
